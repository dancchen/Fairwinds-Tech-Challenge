import boto3
import os
import subprocess



"""
    # create a file to store the key locally
    outfile = open('ec2-keypair.pem','w')

    # call the boto ec2 function to create a key pair
    key_pair = ec2.create_key_pair(KeyName='ec2-keypair')

    # capture the key and store it in a file
    KeyPairOut = str(key_pair.key_material)
    print(KeyPairOut)
    outfile.write(KeyPairOut)
    outfile.close()

    os.chmod("ec2-keypair.pem", 0o400)
"""

#arg = ['sudo', 'apt-get', 'install', '-y', 'ansible',]
#subprocess.Popen(arg, 
#		stdin=subprocess.PIPE,
#		).wait(timeout=60)
#proc = subprocess.Popen('apt-get install -y ansible', shell=True, executable="/bin/bash")
#proc.wait()
#proc.stdin.write('a\n')
#proc.stdin.flush()

#stdout, stderr = proc.communicate()
#print(stdout)
#print(stderr)

ec2 = boto3.resource('ec2')

instances = ec2.create_instances(
     ImageId='ami-09e67e426f25ce0d7',
     MinCount=1,
     MaxCount=1,
     InstanceType='t2.micro',
     KeyName='ec2-keypair'
 )

#time.sleep(40)
#running_instances = ec2.instances.filter(Filters=[{
#    'Name': 'instance-state-name',
#    'Values': ['running']}])

#print(instances.public_ip_address)
#print(list(running_instances))
#print(list(running_instances))

#for instance in running_instances:
#    print(instance.public_hostname)

instance = instances[0]

instance.wait_until_running()

# Associate Security Group to the instance to allow access to instance VPC 
instance.modify_attribute(Groups=['sg-0c56f0fa147e09cc1'])

# Reload to get the DNS name after EC2 is up and running
instance.load()
hostname = instance.public_dns_name


print("Please use this address to access the website http://{}:8000".format(hostname))


